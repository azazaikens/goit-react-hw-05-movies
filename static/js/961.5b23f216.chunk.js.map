{"version":3,"file":"static/js/961.5b23f216.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// import { Cast } from 'components/Cast/Cast';\nimport { Loader } from 'components/Loader/Loader';\nimport { useRef, useState, useEffect, lazy, Suspense } from 'react';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { requestDetails } from 'services/api';\n\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(1);\n  const location = useLocation();\n  const backLinkRef = useRef(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetchMoviesById = async () => {\n      try {\n        const result = await requestDetails(movieId);\n        setMovieData(result);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMoviesById();\n  }, [movieId]);\n\n  const userScore = Math.floor(movieData?.vote_average * 10);\n  const genres = movieData?.genres?.map(genre => genre.name)?.join(', ');\n  const releaseDate = movieData?.release_date?.slice(0, 4);\n  let urlImg;\n  movieData.poster_path\n    ? (urlImg = `https://image.tmdb.org/t/p/w342${movieData.poster_path}`)\n    : (urlImg = false);\n  return (\n    <>\n      <Link to={backLinkRef.current}> Go back</Link>\n\n      <div\n        style={{\n          display: 'flex',\n          gap: '10px',\n        }}\n      >\n        <div>\n          <img\n            style={{\n              width: '240px',\n              height: '380px',\n            }}\n            src={\n              urlImg\n                ? urlImg\n                : 'https://media.istockphoto.com/id/1392182937/vector/no-image-available-photo-coming-soon.jpg?s=612x612&w=0&k=20&c=3vGh4yj0O2b4tPtjpK-q-Qg0wGHsjseL2HT-pIyJiuc='\n            }\n            alt={movieData.title}\n          />\n        </div>\n        <div>\n          <h1>\n            {movieData.title} ({releaseDate})\n          </h1>\n          <p>User score: {userScore}%</p>\n          <h2>Overview</h2>\n          <p>{movieData.overview}</p>\n          <h3>Genres</h3>\n          <p>{genres}</p>\n        </div>\n      </div>\n      <h4>Additional information</h4>\n      <div>\n        <Link to=\"cast\">Cast</Link>\n        <Link\n          style={{\n            marginLeft: '10px',\n          }}\n          to=\"reviews\"\n        >\n          Reviews\n        </Link>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '989563dd1f865a35d8f87302bbcd611b';\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    language: 'en-US',\n    api_key: API_KEY,\n  },\n});\n\nexport const requestTrendMovies = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\nexport const requestSearch = async inputValue => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: inputValue, \n    },\n  });\n\n  return data;\n};\n\nexport const requestDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const requestCasts = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/casts`);\n\n  return data;\n};\nexport const requestReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n\n  return data;\n};"],"names":["Cast","lazy","Reviews","_location$state$from","_location$state","_movieData$genres","_movieData$genres$map","_movieData$release_da","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieData","setMovieData","location","useLocation","backLinkRef","useRef","state","from","useEffect","fetchMoviesById","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","requestDetails","sent","t0","console","error","stop","apply","arguments","urlImg","userScore","Math","floor","vote_average","genres","map","genre","name","join","releaseDate","release_date","slice","poster_path","concat","_jsxs","_Fragment","children","_jsx","Link","to","current","style","display","gap","width","height","src","alt","title","overview","marginLeft","Suspense","fallback","Loader","Routes","Route","path","element","instance","axios","baseURL","params","language","api_key","requestTrendMovies","_yield$instance$get","data","get","abrupt","requestSearch","_ref2","_callee2","inputValue","_yield$instance$get2","_context2","query","_x","_ref3","_callee3","_yield$instance$get3","_context3","_x2","requestCasts","_ref4","_callee4","_yield$instance$get4","_context4","_x3","requestReviews","_ref5","_callee5","_yield$instance$get5","_context5","_x4"],"sourceRoot":""}