{"version":3,"file":"static/js/278.4f1bcab2.chunk.js","mappings":"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","sources":["pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { requestSearch } from \"services/api\";\n\n\nconst Movies = () => {\n    const [searchMovies, setSearchMovies] = useState([]);\n    const [params, setSearchParams] = useSearchParams();\n    const queryParam = params.get('query');\n    const location = useLocation();\n\n    const handleSubmit = async ev => {\n        ev.preventDefault();\n        setSearchParams({\n          query: ev.currentTarget.elements.searchWord.value\n        });\n    }\n\n    useEffect(() => {\n      if (queryParam === null) {\n        return;\n      }\n      const fetchMoviesByTitle = async () => {\n        try {\n          const { results } = await requestSearch(queryParam);\n          setSearchMovies(results);\n          console.log(results);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n      fetchMoviesByTitle();\n    }, [queryParam]);\n\n    return (\n      <>\n        <form onSubmit={handleSubmit}>\n          <input\n            name=\"searchWord\"\n            type=\"text\"\n            placeholder=\"Enter search for a movie\"\n            defaultValue={queryParam}\n          />\n          <button type=\"submit\">\n            Search\n          </button>\n        </form>\n        <ul>\n          {searchMovies.map(movie => (\n            <Link\n              key={movie.id}\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n              params={{ movieId: movie.id }}\n            >\n              <div>\n                <p>{movie.title || movie.name}</p>\n              </div>\n            </Link>\n          ))}\n        </ul>\n      </>\n    );\n}\n\nexport default Movies;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '989563dd1f865a35d8f87302bbcd611b';\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    language: 'en-US',\n    api_key: API_KEY,\n  },\n});\n\nexport const requestTrendMovies = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\nexport const requestSearch = async inputValue => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: inputValue, \n    },\n  });\n\n  return data;\n};\n\nexport const requestDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const requestCasts = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/casts`);\n\n  return data;\n};\nexport const requestReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n\n  return data;\n};"],"names":["_useState","useState","_useState2","_slicedToArray","searchMovies","setSearchMovies","_useSearchParams","useSearchParams","_useSearchParams2","params","setSearchParams","queryParam","get","location","useLocation","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","ev","_context","prev","next","preventDefault","query","currentTarget","elements","searchWord","value","stop","_x","apply","arguments","useEffect","fetchMoviesByTitle","_ref2","_callee2","_yield$requestSearch","results","_context2","requestSearch","sent","console","log","t0","error","_jsxs","_Fragment","children","onSubmit","_jsx","name","type","placeholder","defaultValue","map","movie","Link","to","concat","id","state","from","movieId","title","instance","axios","baseURL","language","api_key","requestTrendMovies","_yield$instance$get","data","abrupt","inputValue","_yield$instance$get2","requestDetails","_ref3","_callee3","_yield$instance$get3","_context3","_x2","requestCasts","_ref4","_callee4","_yield$instance$get4","_context4","_x3","requestReviews","_ref5","_callee5","_yield$instance$get5","_context5","_x4"],"sourceRoot":""}