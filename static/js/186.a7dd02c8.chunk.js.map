{"version":3,"file":"static/js/186.a7dd02c8.chunk.js","mappings":"yNA4CA,UAxCgB,WAAO,IAADA,EACVC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAsCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAkBlC,OAhBAI,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CAGA,IAAMS,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEIC,EAAAA,EAAAA,IAAelB,GAAS,KAAD,EAAtCc,EAAMC,EAAAI,KACZZ,EAAeO,GACfM,QAAQC,IAAIP,GAAQC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEpBK,QAAQG,MAAKR,EAAAO,IAAQ,yBAAAP,EAAAS,OAAA,GAAAX,EAAA,kBAExB,kBARiB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KASlBjB,GAVA,CAWF,GAAG,CAACT,KAGF2B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACIvB,GAA8C,IAA/BA,EAAYwB,QAAQC,QAKnCJ,EAAAA,EAAAA,KAAA,MAAAE,SACc,OAAXvB,QAAW,IAAXA,GAAoB,QAATP,EAAXO,EAAawB,eAAO,IAAA/B,OAAT,EAAXA,EAAsBiC,KAAI,SAAAC,GAAM,OAC/BC,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEK,EAAAA,EAAAA,MAAA,MAAAL,SAAA,CAAI,WAASI,EAAOE,WACpBR,EAAAA,EAAAA,KAAA,KAAAE,SAAII,EAAOG,YAFJH,EAAOI,GAGX,OATTV,EAAAA,EAAAA,KAAA,KAAAE,SAAG,+CAeb,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { requestReviews } from \"services/api\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviewsData, setReviewsData] = useState(null);\n\n    useEffect(() => {\n      if (!movieId) {\n        return;\n      }\n      const fetchReviews = async () => {\n        try {\n          const result = await requestReviews(movieId);\n          setReviewsData(result);\n          console.log(result);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n      fetchReviews();\n    }, [movieId]);\n\n    return (\n      <>\n        {!reviewsData || reviewsData.results.length === 0 ? (\n          <p>\n            We don't have any reviews for this movie.\n          </p>\n        ) : (\n          <ul>\n            {reviewsData?.results?.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n}\n\nexport default Reviews;"],"names":["_reviewsData$results","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviewsData","setReviewsData","useEffect","fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","requestReviews","sent","console","log","t0","error","stop","apply","arguments","_jsx","_Fragment","children","results","length","map","review","_jsxs","author","content","id"],"sourceRoot":""}